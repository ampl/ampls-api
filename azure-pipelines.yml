jobs:
- job: linux
  pool: {vmImage: 'Ubuntu-16.04'}
  strategy:
    matrix:
      gurobi:
        solver: 'gurobi'
      cplex:
        solver: 'cplex'
  variables:
    wheelhouse: $(Build.ArtifactStagingDirectory)
  steps:
    - task: UsePythonVersion@0
    - script: |
        sudo apt-get install swig
      displayName: Install SWIG
    - bash: |
        bash libs/download.sh
      displayName: Download libraries
    - bash: |
        set -ex
        mkdir -p tmp
        TMP=`pwd`/tmp
        cd python/$SOLVER
        bash prepare.sh
        # bash swig.sh
        pip install --upgrade pip
        pip install urllib3[secure] --upgrade
        pip install cibuildwheel==1.6.2
        CIBW_SKIP='*-manylinux*_i686' cibuildwheel --output-dir $TMP .
        ls -l $TMP
        test "$(ls -A $TMP)" || exit 1
        mv $TMP/* $WHEELHOUSE/
        # python setup.py sdist -d $WHEELHOUSE
        # pip install twine
        # twine upload -u $(TWINE_USERNAME) -p $(TWINE_PASSWORD) $WHEELHOUSE/*.whl || true
      displayName: Build wheels
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: '$(Build.ArtifactStagingDirectory)'}
- job: macos
  pool: {vmImage: 'macOS-10.15'}
  strategy:
    matrix:
      gurobi:
        solver: 'gurobi'
      cplex:
        solver: 'cplex'
  variables:
    wheelhouse: $(Build.ArtifactStagingDirectory)
  steps: 
    - task: UsePythonVersion@0
    - script: |
        brew install swig
      displayName: Install SWIG
    - bash: |
        bash libs/download.sh
      displayName: Download libraries
    - bash: |
        set -ex
        mkdir -p tmp
        TMP=`pwd`/tmp
        cd python/$SOLVER
        bash prepare.sh
        # bash swig.sh
        pip install --upgrade pip
        pip install urllib3[secure] --upgrade
        pip install cibuildwheel==1.6.2
        cibuildwheel --output-dir $TMP .
        ls -l $TMP
        test "$(ls -A $TMP)" || exit 1
        mv $TMP/* $WHEELHOUSE/
        # pip install twine
        # twine upload -u $(TWINE_USERNAME) -p $(TWINE_PASSWORD) $WHEELHOUSE/*.whl || true
      displayName: Build wheels
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: '$(Build.ArtifactStagingDirectory)'}
- job: windows
  pool: {vmImage: 'vs2017-win2016'}
  strategy:
    matrix:
      gurobi:
        solver: 'gurobi'
      cplex:
        solver: 'cplex'
  variables:
    wheelhouse: $(Build.ArtifactStagingDirectory)
  steps:
    - {task: UsePythonVersion@0, inputs: {versionSpec: '2.7', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.5', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.6', architecture: x64}}
    - {task: UsePythonVersion@0, inputs: {versionSpec: '3.7', architecture: x64}}
    - script: |
        choco install vcpython27 -f -y
      displayName: Install Visual C++ for Python 2.7
    - script: |
        choco install -y --x86 swig
      displayName: Install SWIG
    - bash: |
        bash libs/download.sh
      displayName: Download libraries
    - bash: |
        curl -o libs/gurobi/include/stdint.h https://raw.githubusercontent.com/mattn/gntp-send/master/include/msinttypes/stdint.h
        cp libs/gurobi/include/stdint.h libs/cplex/include/stdint.h
      displayName: Download stdint.h for gurobi
    - bash: |
        set -ex
        mkdir -p tmp
        TMP=`pwd`/tmp
        cd python/$SOLVER
        bash prepare.sh
        # bash swig.sh
        python -m pip install --user --upgrade pip
        python -m pip install urllib3[secure] --upgrade
        python -m pip install cibuildwheel==1.6.2
        CIBW_SKIP='*-win32' cibuildwheel --output-dir $TMP .
        cibuildwheel --output-dir $TMP .
        ls -l $TMP
        test "$(ls -A $TMP)" || exit 1
        mv $TMP/* $WHEELHOUSE/
        # python -m pip install twine
        # python -m twine upload -u $(TWINE_USERNAME) -p $(TWINE_PASSWORD) $WHEELHOUSE/*.whl || true
      displayName: Build wheels
    - task: PublishBuildArtifacts@1
      inputs: {pathtoPublish: '$(Build.ArtifactStagingDirectory)'}
