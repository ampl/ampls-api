<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classampls_1_1_gurobi_model" kind="class" language="C++" prot="public">
    <compoundname>ampls::GurobiModel</compoundname>
    <basecompoundref refid="classampls_1_1_a_m_p_l_model" prot="public" virt="non-virtual">ampls::AMPLModel</basecompoundref>
    <includes refid="gurobi__interface_8h" local="no">gurobi_interface.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classampls_1_1_gurobi_model_1aceab36f133978567ae26a5682abdaad7" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend ampls::GurobiModel::GurobiDrv</definition>
        <argsstring></argsstring>
        <name>GurobiDrv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="73" column="10" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classampls_1_1_gurobi_model_1a65d6c4551477870e3841625af6ae534e" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool ampls::GurobiModel::copied_</definition>
        <argsstring></argsstring>
        <name>copied_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="75" column="16" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classampls_1_1_gurobi_model_1ac23aef95247db1f4082fb551a727c61d" prot="private" static="no" mutable="no">
        <type>GRBmodel *</type>
        <definition>GRBmodel* ampls::GurobiModel::GRBModel_</definition>
        <argsstring></argsstring>
        <name>GRBModel_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="76" column="12" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classampls_1_1_gurobi_model_1ac6b22329948a91d0f4c43c516464abef" prot="private" static="no" mutable="no">
        <type>ASL *</type>
        <definition>ASL* ampls::GurobiModel::asl_</definition>
        <argsstring></argsstring>
        <name>asl_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="77" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classampls_1_1_gurobi_model_1a661183999ec2eea9cbc193138a1c8835" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ampls::GurobiModel::lastErrorCode_</definition>
        <argsstring></argsstring>
        <name>lastErrorCode_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="78" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a2cb834e8381bdda432523873cbcf4b92" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ampls::GurobiModel::GurobiModel</definition>
        <argsstring>()</argsstring>
        <name>GurobiModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="80" column="3" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="80" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a0106335fca3e34e0fd55278cdb15472f" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::setCallbackDerived</definition>
        <argsstring>(impl::BaseCallback *callback)</argsstring>
        <name>setCallbackDerived</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1a27190416a7add5411ea850feca3eb9b0">setCallbackDerived</reimplements>
        <param>
          <type>impl::BaseCallback *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="84" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a9d191db93833367d3e9ecf5bc445c69d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>impl::BaseCallback *</type>
        <definition>impl::BaseCallback* ampls::GurobiModel::createCallbackImplDerived</definition>
        <argsstring>(GenericCallback *callback)</argsstring>
        <name>createCallbackImplDerived</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1a08289f51a8292285dcdd2d472ff9924d">createCallbackImplDerived</reimplements>
        <param>
          <type><ref refid="classampls_1_1_generic_callback" kindref="compound">GenericCallback</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="85" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a249b482be9404183a6caa16e74f42902" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ampls::GurobiModel::writeSolImpl</definition>
        <argsstring>(const char *solFileName)</argsstring>
        <name>writeSolImpl</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1afce5959882c970916e545b69e71bd5c1">writeSolImpl</reimplements>
        <param>
          <type>const char *</type>
          <declname>solFileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="86" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1adbb5e96a0c091c80aed2dec216fb320a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void ampls::GurobiModel::enableLazyConstraints</definition>
        <argsstring>()</argsstring>
        <name>enableLazyConstraints</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1aa45dbd2191a82acea153e2b3d6c1573d">enableLazyConstraints</reimplements>
        <briefdescription>
<para>Enable adding lazy constraints via callbacks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="88" column="8" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a4148d0557ff0d8c6f3e9c2ca7a2987b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ampls::GurobiModel::GurobiModel</definition>
        <argsstring>(const GurobiModel &amp;other)</argsstring>
        <name>GurobiModel</name>
        <param>
          <type>const <ref refid="classampls_1_1_gurobi_model" kindref="compound">GurobiModel</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="92" column="3" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1ad374a0553ae664a6a19ab028554fd492" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1a7e639a340228e6f93f64fd1de4e44338">optimize</reimplements>
        <briefdescription>
<para>Start the optimization process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="100" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1ac69a3612e67a909dc1de029d63f902ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Status::SolStatus</type>
        <definition>Status::SolStatus ampls::GurobiModel::getStatus</definition>
        <argsstring>()</argsstring>
        <name>getStatus</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1aa30ec04fefc1c4cc6d3d906f4e662384">getStatus</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="102" column="21" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="102" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1aa7d5a71be21a0bd56d37e8c8fcb18727" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::getNumVars</definition>
        <argsstring>()</argsstring>
        <name>getNumVars</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1a83f292201e3a0181e6c796e50edce69f">getNumVars</reimplements>
        <briefdescription>
<para>Get the number of variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="129" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1abb643bb44cd116e6525556d04f6f6af0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double ampls::GurobiModel::getObj</definition>
        <argsstring>()</argsstring>
        <name>getObj</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1ac465963811921794564f08959d2acbe2">getObj</reimplements>
        <briefdescription>
<para>Get the current objective value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="132" column="10" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="132" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a7f389bb22ef8a5ec7620da71097b846c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::getSolution</definition>
        <argsstring>(int first, int length, double *sol)</argsstring>
        <name>getSolution</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1ada258dda5511214bdc3318bc99d0ec9f">getSolution</reimplements>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sol</declname>
        </param>
        <briefdescription>
<para>Get &quot;length&quot; variables of the current problem in an array, starting at the specified position. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="135" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1abd00bf4004a1678f0217ad3a77c7cf0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string ampls::GurobiModel::error</definition>
        <argsstring>(int code)</argsstring>
        <name>error</name>
        <reimplements refid="classampls_1_1_a_m_p_l_model_1a842b77149c818c530b630999d1fded8d">error</reimplements>
        <param>
          <type>int</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Get the error message corresponding to the code. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="139" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a398811b78ddf278875e3225d07532d7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::getIntAttr</definition>
        <argsstring>(const char *name)</argsstring>
        <name>getIntAttr</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="142" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a6247b0cca3cb748d7150a4695c8a97e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ampls::GurobiModel::getDoubleAttr</definition>
        <argsstring>(const char *name)</argsstring>
        <name>getDoubleAttr</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="143" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a549955574cc944645f7aa35de7600e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::getIntAttrArray</definition>
        <argsstring>(const char *name, int first, int length, int *arr)</argsstring>
        <name>getIntAttrArray</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="144" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1af703215c927fe1b26dfe53f39f3b52e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::getDoubleAttrArray</definition>
        <argsstring>(const char *name, int first, int length, double *arr)</argsstring>
        <name>getDoubleAttrArray</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>arr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="145" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a9ff8d15283728f98d7d8334dd6ba085a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::getIntParam</definition>
        <argsstring>(const char *name)</argsstring>
        <name>getIntParam</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="147" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1ad058a756ca93ae70d07df0555f422150" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ampls::GurobiModel::getDoubleParam</definition>
        <argsstring>(const char *name)</argsstring>
        <name>getDoubleParam</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="152" column="10" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a85182588892354b0891cc884eb597088" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* ampls::GurobiModel::getStrParam</definition>
        <argsstring>(const char *name)</argsstring>
        <name>getStrParam</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="157" column="8" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a3bb3f4d4613c1bb06b9dc05c51bc9873" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ampls::GurobiModel::setIntParam</definition>
        <argsstring>(const char *name, int value)</argsstring>
        <name>setIntParam</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="163" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a2c1b1bc1fd187262750f723f5e1fc253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ampls::GurobiModel::setDoubleParam</definition>
        <argsstring>(const char *name, double value)</argsstring>
        <name>setDoubleParam</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="166" column="10" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a9dc2b262fa4a4ce81de789e3dbdbbfcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double ampls::GurobiModel::setStrParam</definition>
        <argsstring>(const char *name, const char *value)</argsstring>
        <name>setStrParam</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="169" column="10" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a43e0b80b517f5d59930aa9667c05c94e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GRBmodel *</type>
        <definition>GRBmodel* ampls::GurobiModel::getGRBmodel</definition>
        <argsstring>()</argsstring>
        <name>getGRBmodel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="174" column="12" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a6202f8b567442ba501261a354858799d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GRBenv *</type>
        <definition>GRBenv* ampls::GurobiModel::getGRBenv</definition>
        <argsstring>()</argsstring>
        <name>getGRBenv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="177" column="10" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a76b1b223bd0e47742bc95bc3364cb082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ampls::GurobiModel::~GurobiModel</definition>
        <argsstring>()</argsstring>
        <name>~GurobiModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="183" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_gurobi_model_1a70499ebc7d909088db21d0b96b53175f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; ampls::AMPLModel::getSolutionVector</definition>
        <argsstring>()</argsstring>
        <name>getSolutionVector</name>
        <briefdescription>
<para>Get all the variables of the current problem. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="98" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1ae8938457c2e37d5f5e19e528f492b8c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ampls::AMPLModel::getFileName</definition>
        <argsstring>()</argsstring>
        <name>getFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="458" column="15" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="458" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1a0a9ebfa649684a9d6faf6e13f85a32ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; int, std::string &gt;</type>
        <definition>std::map&lt;int, std::string&gt; ampls::AMPLModel::getVarMapInverse</definition>
        <argsstring>()</argsstring>
        <name>getVarMapInverse</name>
        <briefdescription>
<para>Get the map from variable name to index in the solver interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="466" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1a2f5456b17543eb0a6a0c2409617bdd1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::map&lt; std::string, int &gt;</type>
        <definition>std::map&lt;std::string, int&gt; ampls::AMPLModel::getVarMap</definition>
        <argsstring>()</argsstring>
        <name>getVarMap</name>
        <briefdescription>
<para>Get the map from variable name to index in the solver interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="471" column="12" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="471" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1ab4fd6f2a6b0f91dd4983de98e7003c30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; std::string, int &gt;</type>
        <definition>std::map&lt;std::string, int&gt; ampls::AMPLModel::getVarMapFiltered</definition>
        <argsstring>(const char *beginWith)</argsstring>
        <name>getVarMapFiltered</name>
        <param>
          <type>const char *</type>
          <declname>beginWith</declname>
        </param>
        <briefdescription>
<para>Return the variable map, filtered by the variable name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="478" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1a5c20eba868bd9a8207dd44b39c7cdfde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ampls::AMPLModel::setCallback</definition>
        <argsstring>(GenericCallback *callback)</argsstring>
        <name>setCallback</name>
        <param>
          <type><ref refid="classampls_1_1_generic_callback" kindref="compound">GenericCallback</ref> *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set a generic callback to be called during optimization. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is automatically dispatched when (and only when) assigning an <ref refid="classampls_1_1_generic_callback" kindref="compound">ampls::GenericCallback</ref>, as it needs a special treatment to automatically create the solver-specific wrapper </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="485" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="485" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1a0e051acaa733bd9d45354b218966de0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ampls::AMPLModel::setCallback</definition>
        <argsstring>(impl::BaseCallback *callback)</argsstring>
        <name>setCallback</name>
        <param>
          <type>impl::BaseCallback *</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Set callback to be called during optimization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="495" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="495" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1acb0a7c8e8c0e38b0bc71615daeead693" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ampls::AMPLModel::writeSol</definition>
        <argsstring>()</argsstring>
        <name>writeSol</name>
        <briefdescription>
<para>Write the solution file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="523" column="16" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="523" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1a64d58554792987885e83128a9faa60c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void ampls::AMPLModel::writeSol</definition>
        <argsstring>(const char *solFileName)</argsstring>
        <name>writeSol</name>
        <param>
          <type>const char *</type>
          <declname>solFileName</declname>
        </param>
        <briefdescription>
<para>Write the solution file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="529" column="16" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="529" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="classampls_1_1_a_m_p_l_model_1ac2e1800d30c2751eb9464cbbf16da70f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ampls::AMPLModel::printModelVars</definition>
        <argsstring>(bool onlyNonZero)</argsstring>
        <name>printModelVars</name>
        <param>
          <type>bool</type>
          <declname>onlyNonZero</declname>
        </param>
        <briefdescription>
<para>Utility function: prints all variables to screen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="559" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encapsulates all the instance level information for a gurobi model, namely the GRBmodel object and the relative ASL. </para>
    </briefdescription>
    <detaileddescription>
<para>It can not be created any other way than by reading an nl file, and any assignment moves actual ownership. At the end of its life, it deletes the GRBmodel and the ASL structures. Note that if we don&apos;t want to use the writesol function, we don&apos;t really need the ASL reference after creating the Gurobi model object, so we could use directly the C pointer to GRBmodel. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ampls::AMPLModel</label>
        <link refid="classampls_1_1_a_m_p_l_model"/>
      </node>
      <node id="1">
        <label>ampls::GurobiModel</label>
        <link refid="classampls_1_1_gurobi_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ampls::AMPLModel</label>
        <link refid="classampls_1_1_a_m_p_l_model"/>
      </node>
      <node id="1">
        <label>ampls::GurobiModel</label>
        <link refid="classampls_1_1_gurobi_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" line="72" column="35" bodyfile="D:/Development/ampl/ampls-api/cpp/gurobi/include/gurobi_interface.h" bodystart="72" bodyend="185"/>
    <listofallmembers>
      <member refid="classampls_1_1_a_m_p_l_model_1a15442f8b8c6cf29ba2bef3c986e3d246" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>AMPLModel</name></member>
      <member refid="classampls_1_1_gurobi_model_1ac6b22329948a91d0f4c43c516464abef" prot="private" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>asl_</name></member>
      <member refid="classampls_1_1_gurobi_model_1a65d6c4551477870e3841625af6ae534e" prot="private" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>copied_</name></member>
      <member refid="classampls_1_1_gurobi_model_1a9d191db93833367d3e9ecf5bc445c69d" prot="private" virt="virtual"><scope>ampls::GurobiModel</scope><name>createCallbackImplDerived</name></member>
      <member refid="classampls_1_1_gurobi_model_1adbb5e96a0c091c80aed2dec216fb320a" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>enableLazyConstraints</name></member>
      <member refid="classampls_1_1_gurobi_model_1abd00bf4004a1678f0217ad3a77c7cf0a" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>error</name></member>
      <member refid="classampls_1_1_gurobi_model_1a6247b0cca3cb748d7150a4695c8a97e1" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getDoubleAttr</name></member>
      <member refid="classampls_1_1_gurobi_model_1af703215c927fe1b26dfe53f39f3b52e7" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getDoubleAttrArray</name></member>
      <member refid="classampls_1_1_gurobi_model_1ad058a756ca93ae70d07df0555f422150" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getDoubleParam</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1ae8938457c2e37d5f5e19e528f492b8c4" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getFileName</name></member>
      <member refid="classampls_1_1_gurobi_model_1a6202f8b567442ba501261a354858799d" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getGRBenv</name></member>
      <member refid="classampls_1_1_gurobi_model_1a43e0b80b517f5d59930aa9667c05c94e" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getGRBmodel</name></member>
      <member refid="classampls_1_1_gurobi_model_1a398811b78ddf278875e3225d07532d7d" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getIntAttr</name></member>
      <member refid="classampls_1_1_gurobi_model_1a549955574cc944645f7aa35de7600e3f" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getIntAttrArray</name></member>
      <member refid="classampls_1_1_gurobi_model_1a9ff8d15283728f98d7d8334dd6ba085a" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getIntParam</name></member>
      <member refid="classampls_1_1_gurobi_model_1aa7d5a71be21a0bd56d37e8c8fcb18727" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>getNumVars</name></member>
      <member refid="classampls_1_1_gurobi_model_1abb643bb44cd116e6525556d04f6f6af0" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>getObj</name></member>
      <member refid="classampls_1_1_gurobi_model_1a7f389bb22ef8a5ec7620da71097b846c" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>getSolution</name></member>
      <member refid="classampls_1_1_gurobi_model_1a70499ebc7d909088db21d0b96b53175f" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getSolutionVector</name></member>
      <member refid="classampls_1_1_gurobi_model_1ac69a3612e67a909dc1de029d63f902ce" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>getStatus</name></member>
      <member refid="classampls_1_1_gurobi_model_1a85182588892354b0891cc884eb597088" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getStrParam</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1a2f5456b17543eb0a6a0c2409617bdd1a" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getVarMap</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1ab4fd6f2a6b0f91dd4983de98e7003c30" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getVarMapFiltered</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1a0a9ebfa649684a9d6faf6e13f85a32ff" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>getVarMapInverse</name></member>
      <member refid="classampls_1_1_gurobi_model_1ac23aef95247db1f4082fb551a727c61d" prot="private" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>GRBModel_</name></member>
      <member refid="classampls_1_1_gurobi_model_1aceab36f133978567ae26a5682abdaad7" prot="private" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>GurobiDrv</name></member>
      <member refid="classampls_1_1_gurobi_model_1a2cb834e8381bdda432523873cbcf4b92" prot="private" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>GurobiModel</name></member>
      <member refid="classampls_1_1_gurobi_model_1a4148d0557ff0d8c6f3e9c2ca7a2987b1" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>GurobiModel</name></member>
      <member refid="classampls_1_1_gurobi_model_1a661183999ec2eea9cbc193138a1c8835" prot="private" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>lastErrorCode_</name></member>
      <member refid="classampls_1_1_gurobi_model_1ad374a0553ae664a6a19ab028554fd492" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>optimize</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1ac2e1800d30c2751eb9464cbbf16da70f" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>printModelVars</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1a5c20eba868bd9a8207dd44b39c7cdfde" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>setCallback</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1a0e051acaa733bd9d45354b218966de0e" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>setCallback</name></member>
      <member refid="classampls_1_1_gurobi_model_1a0106335fca3e34e0fd55278cdb15472f" prot="private" virt="virtual"><scope>ampls::GurobiModel</scope><name>setCallbackDerived</name></member>
      <member refid="classampls_1_1_gurobi_model_1a2c1b1bc1fd187262750f723f5e1fc253" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>setDoubleParam</name></member>
      <member refid="classampls_1_1_gurobi_model_1a3bb3f4d4613c1bb06b9dc05c51bc9873" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>setIntParam</name></member>
      <member refid="classampls_1_1_gurobi_model_1a9dc2b262fa4a4ce81de789e3dbdbbfcc" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>setStrParam</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1acb0a7c8e8c0e38b0bc71615daeead693" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>writeSol</name></member>
      <member refid="classampls_1_1_a_m_p_l_model_1a64d58554792987885e83128a9faa60c5" prot="public" virt="virtual"><scope>ampls::GurobiModel</scope><name>writeSol</name></member>
      <member refid="classampls_1_1_gurobi_model_1a249b482be9404183a6caa16e74f42902" prot="private" virt="virtual"><scope>ampls::GurobiModel</scope><name>writeSolImpl</name></member>
      <member refid="classampls_1_1_gurobi_model_1a76b1b223bd0e47742bc95bc3364cb082" prot="public" virt="non-virtual"><scope>ampls::GurobiModel</scope><name>~GurobiModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
