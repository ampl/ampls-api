<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structampls_1_1_variant" kind="struct" language="C++" prot="public">
    <compoundname>ampls::Variant</compoundname>
    <includes refid="ampls_8h" local="no">ampls.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structampls_1_1_variant_1aea0a8096aab8898e748d5cfaceeb634a" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* ampls::Variant::str</definition>
        <argsstring></argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="51" column="14" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structampls_1_1_variant_1a6527d23a3b25fb07b1ca9d5dca0b2c4c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ampls::Variant::integer</definition>
        <argsstring></argsstring>
        <name>integer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="52" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structampls_1_1_variant_1a947d2c35a31c7ee058e227d645ff58af" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double ampls::Variant::dbl</definition>
        <argsstring></argsstring>
        <name>dbl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="53" column="10" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structampls_1_1_variant_1a0a9744aa90d6a0cc2150ba400da6535e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int ampls::Variant::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="54" column="7" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structampls_1_1_variant_1a34a199d2a7fafe7e924ba6cbcd54f8af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ampls::Variant::Variant</definition>
        <argsstring>()</argsstring>
        <name>Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="55" column="3" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structampls_1_1_variant_1ae5c7a5bd5bd74f5bc53c4443f4e597eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ampls::Variant::Variant</definition>
        <argsstring>(const char *c)</argsstring>
        <name>Variant</name>
        <param>
          <type>const char *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="56" column="3" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structampls_1_1_variant_1a17d705dd3a23d58c78c473dc014e5a23" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ampls::Variant::Variant</definition>
        <argsstring>(int v)</argsstring>
        <name>Variant</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="57" column="12" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structampls_1_1_variant_1a18fba9c32934af6962c30f0c43918058" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ampls::Variant::Variant</definition>
        <argsstring>(double v)</argsstring>
        <name>Variant</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="58" column="3" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="58" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores a solver return value. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that the strings are owned by the solver itself, no need to destroy them </para>
    </detaileddescription>
    <location file="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" line="50" column="1" bodyfile="D:/Development/ampl/ampls-api/cpp/ampls/include/ampls/ampls.h" bodystart="49" bodyend="60"/>
    <listofallmembers>
      <member refid="structampls_1_1_variant_1a947d2c35a31c7ee058e227d645ff58af" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>dbl</name></member>
      <member refid="structampls_1_1_variant_1a6527d23a3b25fb07b1ca9d5dca0b2c4c" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>integer</name></member>
      <member refid="structampls_1_1_variant_1aea0a8096aab8898e748d5cfaceeb634a" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>str</name></member>
      <member refid="structampls_1_1_variant_1a0a9744aa90d6a0cc2150ba400da6535e" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>type</name></member>
      <member refid="structampls_1_1_variant_1a34a199d2a7fafe7e924ba6cbcd54f8af" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>Variant</name></member>
      <member refid="structampls_1_1_variant_1ae5c7a5bd5bd74f5bc53c4443f4e597eb" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>Variant</name></member>
      <member refid="structampls_1_1_variant_1a17d705dd3a23d58c78c473dc014e5a23" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>Variant</name></member>
      <member refid="structampls_1_1_variant_1a18fba9c32934af6962c30f0c43918058" prot="public" virt="non-virtual"><scope>ampls::Variant</scope><name>Variant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
