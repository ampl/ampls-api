digraph hierarchy {

node[shape=record,style=filled,fillcolor=gray95]
edge[dir=back, arrowtail=empty]

#SolverDriver[label = "{SolverDriver\<T\>|+ loadMutex|+ loadModel()}"]
#GurobiDrv[label = "{GurobiDrv|+ GRBModel* GRBModel_\n+ ASL* ASL_| + loadModel()}"]
#CPLEXDrv[label = "{CPLEXDrv|...| + compactNodes()\l...}"]

AMPLModel[label = "{AMPLModel|...|+ enableLazyConstraints()\l+ getFileName()\l+ getVarMap()\l+ getVarMapInverse()\l+ getVarMapFiltered()\l+ setCallback()\l+ getNumVars()\l+ getObj()\l+ getSolutionVector()\l+ getStatus()\l+ optimize()\l+ writeSol()\l}"]
GurobiModel[label = "{GurobiModel|...|+ getIntAttr()\l+ getDoubleAttr()\l+ getIntAttrArray()\l+ getDoubleAttrArray()\l+ getIntParam()\l+ getIntAttr()\l+ getDoubleParam()\l+ getStrParam()\l+ setIntParam()\l+ setDoubleParam()\l+ setStrParam()\l|+ getGRBmodel()\l+ getGRBenv()\l}"]
CPLEXModel[label = "{CPLEXModel|...|+ getCPXmodel()\l+ getCPLEXenv()\l}"]

BaseCB[label = "{BaseCallback|...|+ run()\l+ getVarMap()\l+ getVarMapInverse()\l+ addCut()\l+ addLazy()\l+ getSolutionVector()\l+ getObjective()\l+ getWhere()\l+ getMessage()\l|+ getAMPLType()\l+ getValue()\l}"]
GenericCB[label = "{GenericCallback|...|\l...}"]
CPLEXCB[label = "{CPLEXCallback|...|\l...}"]
GurobiCB[label = "{GurobiCallback|...|\l...}"]

#SolverDriver->GurobiDrv
#SolverDriver->CPLEXDrv

AMPLModel->GurobiModel
AMPLModel->CPLEXModel


#BaseCB->GenericCB
#BaseCB->CPLEXCB
#BaseCB->GurobiCB

# not compatible with VS
#AMPLModel->SolverDriver[constraint=false, arrowtail=odiamond]
#GenericCB->AMPLModel[constraint=false, arrowtail=none]
}

